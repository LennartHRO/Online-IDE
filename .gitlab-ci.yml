# no image due to shell executor

stages:
  - build
  - test
  - package
  - publish
  - deploy


# for debugging
before_script:
  #- alias mvn="/usr/local/apache-maven/apache-maven-3.9.6/bin/mvn"
  # unfortunatly this is not working
  - gcc --version
  - javac --version
  - docker --version
  - /usr/local/apache-maven/apache-maven-3.9.6/bin/mvn --version


build:
  stage: build
  script: 
  - /usr/local/apache-maven/apache-maven-3.9.6/bin/mvn clean compile -f ./compiler -q
  - /usr/local/apache-maven/apache-maven-3.9.6/bin/mvn clean compile -f ./dark-mode -q
  - /usr/local/apache-maven/apache-maven-3.9.6/bin/mvn clean compile -f ./project -q
  - /usr/local/apache-maven/apache-maven-3.9.6/bin/mvn clean compile -f ./security -q
  - /usr/local/apache-maven/apache-maven-3.9.6/bin/mvn clean compile -f ./ui -q
  - /usr/local/apache-maven/apache-maven-3.9.6/bin/mvn clean compile -f ./service-registry -q
  - /usr/local/apache-maven/apache-maven-3.9.6/bin/mvn clean compile -f ./api-gateway -q
  artifacts:
    paths:
    - ui/target/*
    - compiler/target/*
    - dark-mode/target/*
    - project/target/*
    - security/target/*
    - service-registry/target/*
    - api-gateway/target/*


test:
  stage: test
  script:
  - /usr/local/apache-maven/apache-maven-3.9.6/bin/mvn test -f ./compiler
  allow_failure: true


package:
  stage: package
  script: 
  - /usr/local/apache-maven/apache-maven-3.9.6/bin/mvn package -f ./compiler -q
  - /usr/local/apache-maven/apache-maven-3.9.6/bin/mvn package -f ./dark-mode -q
  - /usr/local/apache-maven/apache-maven-3.9.6/bin/mvn package -f ./project -q
  - /usr/local/apache-maven/apache-maven-3.9.6/bin/mvn package -f ./security -q
  - /usr/local/apache-maven/apache-maven-3.9.6/bin/mvn package -f ./ui -q
  - /usr/local/apache-maven/apache-maven-3.9.6/bin/mvn package -f ./service-registry -q
  - /usr/local/apache-maven/apache-maven-3.9.6/bin/mvn package -f ./api-gateway -q
  variables:
    MAVEN_OPTS: "-DskipTests=true"
  artifacts:
    paths:
    - ui/target/ui-0.0.1-SNAPSHOT.jar
    - compiler/target/compiler-0.0.1-SNAPSHOT.jar
    - dark-mode/target/darkmode-0.0.1-SNAPSHOT.jar
    - project/target/project-0.0.1-SNAPSHOT.jar
    - security/target/security-0.0.1-SNAPSHOT.jar
    - service-registry/target/service-registry-0.0.1-SNAPSHOT.jar
    - api-gateway/target/gateway-0.0.1-SNAPSHOT.jar


publish:
  stage: publish
  image: docker:stable
  services:
  - docker:25.0.1-dind
  parallel:
    matrix:
      - SERVICE_NAME:
        - compiler
        - dark-mode
        - security
        - project
        - ui
        - service-registry
        - api-gateway
  script:
  - cd ./$SERVICE_NAME
  - docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"
  - docker pull $CI_REGISTRY_IMAGE/$SERVICE_NAME:latest || true
  - docker build --tag $CI_REGISTRY_IMAGE/SERVICE_NAME:latest .
  - docker push $CI_REGISTRY_IMAGE/$SERVICE_NAME:latest
  - cd ..
  variables:
    DOCKER_DRIVER: overlay2
  #rules:
  #- if: '$CI_COMMIT_BRANCH == "main"'


deploy:
  stage: deploy
  script:
  - curl -- version
  #- # with ssh to vm
  #- # pull new images from registry (via gitlab api)
  - docker compose up
  #rules:
  #  - if: '$CI_COMMIT_BRANCH == "main"'
